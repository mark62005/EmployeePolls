// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login will match the snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="text-center w-50 container-fluid"
      >
        <h1>
          Login
        </h1>
        <form
          class=""
          novalidate=""
        >
          <div
            class="text-start row"
          >
            <div
              class="mb-3 col"
            >
              <label
                class="form-label"
                for="userId"
              >
                ID
              </label>
              <input
                class="form-control"
                data-testid="id-input"
                id="userId"
                placeholder="Enter Your ID"
                required=""
                type="text"
                value=""
              />
              <div
                class="invalid-feedback"
              >
                Please provide a valid User ID.
              </div>
            </div>
          </div>
          <div
            class="text-start row"
          >
            <div
              class="mb-3 col"
            >
              <label
                class="form-label"
                for="password"
              >
                Password
              </label>
              <input
                class="form-control"
                data-testid="password-input"
                id="password"
                placeholder="Enter Your Password"
                required=""
                type="password"
                value=""
              />
              <div
                class="invalid-feedback"
              >
                Please provide a valid password.
              </div>
            </div>
          </div>
          <button
            class="btn btn-primary"
            data-testid="sign-in-button"
            disabled=""
            type="button"
          >
            SIGN IN
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="text-center w-50 container-fluid"
    >
      <h1>
        Login
      </h1>
      <form
        class=""
        novalidate=""
      >
        <div
          class="text-start row"
        >
          <div
            class="mb-3 col"
          >
            <label
              class="form-label"
              for="userId"
            >
              ID
            </label>
            <input
              class="form-control"
              data-testid="id-input"
              id="userId"
              placeholder="Enter Your ID"
              required=""
              type="text"
              value=""
            />
            <div
              class="invalid-feedback"
            >
              Please provide a valid User ID.
            </div>
          </div>
        </div>
        <div
          class="text-start row"
        >
          <div
            class="mb-3 col"
          >
            <label
              class="form-label"
              for="password"
            >
              Password
            </label>
            <input
              class="form-control"
              data-testid="password-input"
              id="password"
              placeholder="Enter Your Password"
              required=""
              type="password"
              value=""
            />
            <div
              class="invalid-feedback"
            >
              Please provide a valid password.
            </div>
          </div>
        </div>
        <button
          class="btn btn-primary"
          data-testid="sign-in-button"
          disabled=""
          type="button"
        >
          SIGN IN
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
